{"version":3,"sources":["webpack:///2.518ca7d9da1e802bb80b.js","webpack:///./src/routes/BoardGames/modules/boardgames.js","webpack:///./src/routes/BoardGames/containers/BoardGamesContainer.js","webpack:///./src/routes/BoardGames/components/BoardGames.js"],"names":["webpackJsonp","734","module","__webpack_exports__","__webpack_require__","counterReducer","state","arguments","length","undefined","initialState","action","handler","ACTION_HANDLERS","type","Object","defineProperty","value","d","actions","737","__WEBPACK_IMPORTED_MODULE_0_react_redux__","__WEBPACK_IMPORTED_MODULE_2__components_BoardGames__","mapDispatchToProps","mapStateToProps","i","747","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_prop_types__","BoardGames","a","createElement","style","margin","propTypes"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCuBe,SAASC,KAA8C,GAA9BC,GAA8BC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAtBG,EAAcC,EAAQJ,UAAA,GAC9DK,EAAUC,EAAgBF,EAAOG,KAEvC,OAAOF,GAAUA,EAAQN,EAAOK,GAAUL,EDzB5CS,OAAOC,eAAeb,EAAqB,cAAgBc,OAAO,IACnCb,EAAoBc,EAAEf,EAAqB,UAAW,WAAa,MAAOgB,KCPzGhB,EAAA,QAAAE,CAeO,IAAMc,MAMPN,KAMAH,EAAe,GDkBfU,IACA,SAAUlB,EAAQC,EAAqBC,GAE7C,YACAW,QAAOC,eAAeb,EAAqB,cAAgBc,OAAO,GAC7C,IAAII,GAA4CjB,EAAoB,KAEhEkB,GADoDlB,EAAoB,KACjBA,EAAoB,MEtC9FmB,KAGAC,EAAkB,SAAClB,GAAD,SAiBxBH,GAAA,QAAeC,EAAAqB,EAAAJ,EAAA,SAAQG,EAAiBD,GAAoBD,EAAA,IFyDtDI,IACA,SAAUxB,EAAQC,EAAqBC,GAE7C,YAEqB,IAAIuB,GAAsCvB,EAAoB,GAC1DwB,EAA8CxB,EAAoByB,EAAEF,GACpEG,EAA2C1B,EAAoB,GG/F3E2B,GHgG+D3B,EAAoByB,EAAEC,GGhGxE,iBACxBF,GAAAI,EAAAC,cAAA,OAAKC,OAASC,OAAQ,WACpBP,EAAAI,EAAAC,cAAA,8BAGJF,GAAWK,aAGXjC,EAAA","file":"2.518ca7d9da1e802bb80b.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 734:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"actions\", function() { return actions; });\n/* harmony export (immutable) */ __webpack_exports__[\"default\"] = counterReducer;\n// ------------------------------------\n// Constants\n// ------------------------------------\n\n\n// ------------------------------------\n// Actions\n// ------------------------------------\n\n\n/*  This is a thunk, meaning it is a function that immediately\r\n    returns a function for lazy evaluation. It is incredibly useful for\r\n    creating async actions, especially when combined with redux-thunk! */\n\nvar actions = {};\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\nvar ACTION_HANDLERS = {};\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nvar initialState = 0;\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments[1];\n\n  var handler = ACTION_HANDLERS[action.type];\n\n  return handler ? handler(state, action) : state;\n}\n\n/***/ }),\n\n/***/ 737:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_redux__ = __webpack_require__(108);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__modules_boardgames__ = __webpack_require__(734);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_BoardGames__ = __webpack_require__(747);\n\n\n\n/*  This is a container component. Notice it does not contain any JSX,\r\n    nor does it import React. This component is **only** responsible for\r\n    wiring in the actions and state necessary to render a presentational\r\n    component - in this case, the counter:   */\n\n\n\n/*  Object of action creators (can also be function that returns object).\r\n    Keys will be passed as props to presentational components. Here we are\r\n    implementing our wrapper around increment; the component doesn't care   */\n\nvar mapDispatchToProps = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n    return {};\n};\n\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\r\n\r\n    import { createSelector } from 'reselect'\r\n    const counter = (state) => state.counter\r\n    const tripleCount = createSelector(counter, (count) => count * 3)\r\n    const mapStateToProps = (state) => ({\r\n      counter: tripleCount(state)\r\n    })\r\n\r\n    Selectors can compute derived data, allowing Redux to store the minimal possible state.\r\n    Selectors are efficient. A selector is not recomputed unless one of its arguments change.\r\n    Selectors are composable. They can be used as input to other selectors.\r\n    https://github.com/reactjs/reselect    */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_react_redux__[\"connect\"])(mapStateToProps, mapDispatchToProps)(__WEBPACK_IMPORTED_MODULE_2__components_BoardGames__[\"a\" /* default */]));\n\n/***/ }),\n\n/***/ 747:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export BoardGames */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n\n\n\nvar BoardGames = function BoardGames() {\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    'div',\n    { style: { margin: '0 auto' } },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      'h1',\n      null,\n      ' Coming soon! '\n    )\n  );\n};\nBoardGames.propTypes = {};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BoardGames);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.518ca7d9da1e802bb80b.js","// ------------------------------------\r\n// Constants\r\n// ------------------------------------\r\n\r\n\r\n// ------------------------------------\r\n// Actions\r\n// ------------------------------------\r\n\r\n\r\n/*  This is a thunk, meaning it is a function that immediately\r\n    returns a function for lazy evaluation. It is incredibly useful for\r\n    creating async actions, especially when combined with redux-thunk! */\r\n\r\n\r\nexport const actions = {\r\n}\r\n\r\n// ------------------------------------\r\n// Action Handlers\r\n// ------------------------------------\r\nconst ACTION_HANDLERS = {\r\n}\r\n\r\n// ------------------------------------\r\n// Reducer\r\n// ------------------------------------\r\nconst initialState = 0\r\nexport default function counterReducer (state = initialState, action) {\r\n  const handler = ACTION_HANDLERS[action.type]\r\n\r\n  return handler ? handler(state, action) : state\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/BoardGames/modules/boardgames.js","import { connect } from 'react-redux'\r\nimport {} from '../modules/boardgames'\r\n\r\n/*  This is a container component. Notice it does not contain any JSX,\r\n    nor does it import React. This component is **only** responsible for\r\n    wiring in the actions and state necessary to render a presentational\r\n    component - in this case, the counter:   */\r\n\r\nimport BoardGames from '../components/BoardGames'\r\n\r\n/*  Object of action creators (can also be function that returns object).\r\n    Keys will be passed as props to presentational components. Here we are\r\n    implementing our wrapper around increment; the component doesn't care   */\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\r\n\r\n    import { createSelector } from 'reselect'\r\n    const counter = (state) => state.counter\r\n    const tripleCount = createSelector(counter, (count) => count * 3)\r\n    const mapStateToProps = (state) => ({\r\n      counter: tripleCount(state)\r\n    })\r\n\r\n    Selectors can compute derived data, allowing Redux to store the minimal possible state.\r\n    Selectors are efficient. A selector is not recomputed unless one of its arguments change.\r\n    Selectors are composable. They can be used as input to other selectors.\r\n    https://github.com/reactjs/reselect    */\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardGames)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/BoardGames/containers/BoardGamesContainer.js","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const BoardGames = () => (\r\n  <div style={{ margin: '0 auto' }} >\r\n    <h1> Coming soon! </h1>\r\n  </div>\r\n)\r\nBoardGames.propTypes = {\r\n}\r\n\r\nexport default BoardGames\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/BoardGames/components/BoardGames.js"],"sourceRoot":""}